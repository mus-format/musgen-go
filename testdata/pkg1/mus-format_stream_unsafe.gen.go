// Code generated by musgen-go. DO NOT EDIT.

package pkg1

import (
	"fmt"

	dts "github.com/mus-format/mus-stream-dts-go"
	muss "github.com/mus-format/mus-stream-go"
	"github.com/mus-format/mus-stream-go/ord"
	"github.com/mus-format/mus-stream-go/unsafe"
	"github.com/mus-format/musgen-go/testdata/pkg2"
)

var (
	arrayΔEUbR5kxK3Xh8nZpMbBMΣgΞΞ = ord.NewArraySer[[3]int, int](3, unsafe.Int)
	mapONAdCODA5Δ3WvvEjVZWP6gΞΞ   = ord.NewMapSer[float32, map[MyIntStreamUnsafe][]SimpleStructStreamUnsafe](unsafe.Float32, mapdF4uv9TsHkTsV6KUΔV1DYgΞΞ)
	mapdF4uv9TsHkTsV6KUΔV1DYgΞΞ   = ord.NewMapSer[MyIntStreamUnsafe, []SimpleStructStreamUnsafe](MyIntStreamUnsafeMUS, slice4JrZ808sg28u396h2wj3PAΞΞ)
	ptrAΔt28sCfGLΔUiT2SaΔLeΣAΞΞ   = ord.NewPtrSer[string](unsafe.String)
	ptrKZLDWq303uOh5H5ΣUzp3NwΞΞ   = ord.NewPtrSer[[3]int](arrayΔEUbR5kxK3Xh8nZpMbBMΣgΞΞ)
	ptrzQDVI7StkgLPuOzDeCU5AAΞΞ   = ord.NewPtrSer[SimpleStructStreamUnsafe](SimpleStructStreamUnsafeMUS)
	slice4JrZ808sg28u396h2wj3PAΞΞ = ord.NewSliceSer[SimpleStructStreamUnsafe](SimpleStructStreamUnsafeMUS)
	sliceΔvbmkqqYOtekMVNIDoc5oQΞΞ = ord.NewSliceSer[int](unsafe.Int)
)

var MyIntStreamUnsafeMUS = myIntStreamUnsafeMUS{}

type myIntStreamUnsafeMUS struct{}

func (s myIntStreamUnsafeMUS) Marshal(v MyIntStreamUnsafe, w muss.Writer) (n int, err error) {
	return unsafe.Int.Marshal(int(v), w)
}

func (s myIntStreamUnsafeMUS) Unmarshal(r muss.Reader) (v MyIntStreamUnsafe, n int, err error) {
	tmp, n, err := unsafe.Int.Unmarshal(r)
	if err != nil {
		return
	}
	v = MyIntStreamUnsafe(tmp)
	return
}

func (s myIntStreamUnsafeMUS) Size(v MyIntStreamUnsafe) (size int) {
	return unsafe.Int.Size(int(v))
}

func (s myIntStreamUnsafeMUS) Skip(r muss.Reader) (n int, err error) {
	return unsafe.Int.Skip(r)
}

var MySliceStreamUnsafeMUS = mySliceStreamUnsafeMUS{}

type mySliceStreamUnsafeMUS struct{}

func (s mySliceStreamUnsafeMUS) Marshal(v MySliceStreamUnsafe, w muss.Writer) (n int, err error) {
	return sliceΔvbmkqqYOtekMVNIDoc5oQΞΞ.Marshal([]int(v), w)
}

func (s mySliceStreamUnsafeMUS) Unmarshal(r muss.Reader) (v MySliceStreamUnsafe, n int, err error) {
	tmp, n, err := sliceΔvbmkqqYOtekMVNIDoc5oQΞΞ.Unmarshal(r)
	if err != nil {
		return
	}
	v = MySliceStreamUnsafe(tmp)
	return
}

func (s mySliceStreamUnsafeMUS) Size(v MySliceStreamUnsafe) (size int) {
	return sliceΔvbmkqqYOtekMVNIDoc5oQΞΞ.Size([]int(v))
}

func (s mySliceStreamUnsafeMUS) Skip(r muss.Reader) (n int, err error) {
	return sliceΔvbmkqqYOtekMVNIDoc5oQΞΞ.Skip(r)
}

var SimpleStructStreamUnsafeMUS = simpleStructStreamUnsafeMUS{}

type simpleStructStreamUnsafeMUS struct{}

func (s simpleStructStreamUnsafeMUS) Marshal(v SimpleStructStreamUnsafe, w muss.Writer) (n int, err error) {
	return unsafe.Int.Marshal(v.Int, w)
}

func (s simpleStructStreamUnsafeMUS) Unmarshal(r muss.Reader) (v SimpleStructStreamUnsafe, n int, err error) {
	v.Int, n, err = unsafe.Int.Unmarshal(r)
	return
}

func (s simpleStructStreamUnsafeMUS) Size(v SimpleStructStreamUnsafe) (size int) {
	return unsafe.Int.Size(v.Int)
}

func (s simpleStructStreamUnsafeMUS) Skip(r muss.Reader) (n int, err error) {
	n, err = unsafe.Int.Skip(r)
	return
}

var ComplexStructStreamUnsafeMUS = complexStructStreamUnsafeMUS{}

type complexStructStreamUnsafeMUS struct{}

func (s complexStructStreamUnsafeMUS) Marshal(v ComplexStructStreamUnsafe, w muss.Writer) (n int, err error) {
	n, err = unsafe.Bool.Marshal(v.Bool, w)
	if err != nil {
		return
	}
	var n1 int
	n1, err = unsafe.Uint8.Marshal(v.Byte, w)
	n += n1
	if err != nil {
		return
	}
	n1, err = unsafe.Int8.Marshal(v.Int8, w)
	n += n1
	if err != nil {
		return
	}
	n1, err = unsafe.Int16.Marshal(v.Int16, w)
	n += n1
	if err != nil {
		return
	}
	n1, err = unsafe.Int32.Marshal(v.Int32, w)
	n += n1
	if err != nil {
		return
	}
	n1, err = unsafe.Int64.Marshal(v.Int64, w)
	n += n1
	if err != nil {
		return
	}
	n1, err = unsafe.Uint8.Marshal(v.Uint8, w)
	n += n1
	if err != nil {
		return
	}
	n1, err = unsafe.Uint16.Marshal(v.Uint16, w)
	n += n1
	if err != nil {
		return
	}
	n1, err = unsafe.Uint32.Marshal(v.Uint32, w)
	n += n1
	if err != nil {
		return
	}
	n1, err = unsafe.Uint64.Marshal(v.Uint64, w)
	n += n1
	if err != nil {
		return
	}
	n1, err = unsafe.Float32.Marshal(v.Float32, w)
	n += n1
	if err != nil {
		return
	}
	n1, err = unsafe.Float64.Marshal(v.Float64, w)
	n += n1
	if err != nil {
		return
	}
	n1, err = unsafe.String.Marshal(v.String, w)
	n += n1
	if err != nil {
		return
	}
	n1, err = MySliceStreamUnsafeMUS.Marshal(v.Alias, w)
	n += n1
	if err != nil {
		return
	}
	n1, err = pkg2.StructStreamUnsafeMUS.Marshal(v.AnotherPkgStruct, w)
	n += n1
	if err != nil {
		return
	}
	n1, err = InterfaceStreamUnsafeMUS.Marshal(v.Interface, w)
	n += n1
	if err != nil {
		return
	}
	n1, err = ord.ByteSlice.Marshal(v.ByteSlice, w)
	n += n1
	if err != nil {
		return
	}
	n1, err = slice4JrZ808sg28u396h2wj3PAΞΞ.Marshal(v.StructSlice, w)
	n += n1
	if err != nil {
		return
	}
	n1, err = arrayΔEUbR5kxK3Xh8nZpMbBMΣgΞΞ.Marshal(v.Array, w)
	n += n1
	if err != nil {
		return
	}
	n1, err = ptrAΔt28sCfGLΔUiT2SaΔLeΣAΞΞ.Marshal(v.PtrString, w)
	n += n1
	if err != nil {
		return
	}
	n1, err = ptrzQDVI7StkgLPuOzDeCU5AAΞΞ.Marshal(v.PtrStruct, w)
	n += n1
	if err != nil {
		return
	}
	n1, err = ptrAΔt28sCfGLΔUiT2SaΔLeΣAΞΞ.Marshal(v.NilPtr, w)
	n += n1
	if err != nil {
		return
	}
	n1, err = ptrKZLDWq303uOh5H5ΣUzp3NwΞΞ.Marshal(v.PtrArray, w)
	n += n1
	if err != nil {
		return
	}
	n1, err = mapONAdCODA5Δ3WvvEjVZWP6gΞΞ.Marshal(v.Map, w)
	n += n1
	return
}

func (s complexStructStreamUnsafeMUS) Unmarshal(r muss.Reader) (v ComplexStructStreamUnsafe, n int, err error) {
	v.Bool, n, err = unsafe.Bool.Unmarshal(r)
	if err != nil {
		return
	}
	var n1 int
	v.Byte, n1, err = unsafe.Uint8.Unmarshal(r)
	n += n1
	if err != nil {
		return
	}
	v.Int8, n1, err = unsafe.Int8.Unmarshal(r)
	n += n1
	if err != nil {
		return
	}
	v.Int16, n1, err = unsafe.Int16.Unmarshal(r)
	n += n1
	if err != nil {
		return
	}
	v.Int32, n1, err = unsafe.Int32.Unmarshal(r)
	n += n1
	if err != nil {
		return
	}
	v.Int64, n1, err = unsafe.Int64.Unmarshal(r)
	n += n1
	if err != nil {
		return
	}
	v.Uint8, n1, err = unsafe.Uint8.Unmarshal(r)
	n += n1
	if err != nil {
		return
	}
	v.Uint16, n1, err = unsafe.Uint16.Unmarshal(r)
	n += n1
	if err != nil {
		return
	}
	v.Uint32, n1, err = unsafe.Uint32.Unmarshal(r)
	n += n1
	if err != nil {
		return
	}
	v.Uint64, n1, err = unsafe.Uint64.Unmarshal(r)
	n += n1
	if err != nil {
		return
	}
	v.Float32, n1, err = unsafe.Float32.Unmarshal(r)
	n += n1
	if err != nil {
		return
	}
	v.Float64, n1, err = unsafe.Float64.Unmarshal(r)
	n += n1
	if err != nil {
		return
	}
	v.String, n1, err = unsafe.String.Unmarshal(r)
	n += n1
	if err != nil {
		return
	}
	v.Alias, n1, err = MySliceStreamUnsafeMUS.Unmarshal(r)
	n += n1
	if err != nil {
		return
	}
	v.AnotherPkgStruct, n1, err = pkg2.StructStreamUnsafeMUS.Unmarshal(r)
	n += n1
	if err != nil {
		return
	}
	v.Interface, n1, err = InterfaceStreamUnsafeMUS.Unmarshal(r)
	n += n1
	if err != nil {
		return
	}
	v.ByteSlice, n1, err = ord.ByteSlice.Unmarshal(r)
	n += n1
	if err != nil {
		return
	}
	v.StructSlice, n1, err = slice4JrZ808sg28u396h2wj3PAΞΞ.Unmarshal(r)
	n += n1
	if err != nil {
		return
	}
	v.Array, n1, err = arrayΔEUbR5kxK3Xh8nZpMbBMΣgΞΞ.Unmarshal(r)
	n += n1
	if err != nil {
		return
	}
	v.PtrString, n1, err = ptrAΔt28sCfGLΔUiT2SaΔLeΣAΞΞ.Unmarshal(r)
	n += n1
	if err != nil {
		return
	}
	v.PtrStruct, n1, err = ptrzQDVI7StkgLPuOzDeCU5AAΞΞ.Unmarshal(r)
	n += n1
	if err != nil {
		return
	}
	v.NilPtr, n1, err = ptrAΔt28sCfGLΔUiT2SaΔLeΣAΞΞ.Unmarshal(r)
	n += n1
	if err != nil {
		return
	}
	v.PtrArray, n1, err = ptrKZLDWq303uOh5H5ΣUzp3NwΞΞ.Unmarshal(r)
	n += n1
	if err != nil {
		return
	}
	v.Map, n1, err = mapONAdCODA5Δ3WvvEjVZWP6gΞΞ.Unmarshal(r)
	n += n1
	return
}

func (s complexStructStreamUnsafeMUS) Size(v ComplexStructStreamUnsafe) (size int) {
	size = unsafe.Bool.Size(v.Bool)
	size += unsafe.Uint8.Size(v.Byte)
	size += unsafe.Int8.Size(v.Int8)
	size += unsafe.Int16.Size(v.Int16)
	size += unsafe.Int32.Size(v.Int32)
	size += unsafe.Int64.Size(v.Int64)
	size += unsafe.Uint8.Size(v.Uint8)
	size += unsafe.Uint16.Size(v.Uint16)
	size += unsafe.Uint32.Size(v.Uint32)
	size += unsafe.Uint64.Size(v.Uint64)
	size += unsafe.Float32.Size(v.Float32)
	size += unsafe.Float64.Size(v.Float64)
	size += unsafe.String.Size(v.String)
	size += MySliceStreamUnsafeMUS.Size(v.Alias)
	size += pkg2.StructStreamUnsafeMUS.Size(v.AnotherPkgStruct)
	size += InterfaceStreamUnsafeMUS.Size(v.Interface)
	size += ord.ByteSlice.Size(v.ByteSlice)
	size += slice4JrZ808sg28u396h2wj3PAΞΞ.Size(v.StructSlice)
	size += arrayΔEUbR5kxK3Xh8nZpMbBMΣgΞΞ.Size(v.Array)
	size += ptrAΔt28sCfGLΔUiT2SaΔLeΣAΞΞ.Size(v.PtrString)
	size += ptrzQDVI7StkgLPuOzDeCU5AAΞΞ.Size(v.PtrStruct)
	size += ptrAΔt28sCfGLΔUiT2SaΔLeΣAΞΞ.Size(v.NilPtr)
	size += ptrKZLDWq303uOh5H5ΣUzp3NwΞΞ.Size(v.PtrArray)
	return size + mapONAdCODA5Δ3WvvEjVZWP6gΞΞ.Size(v.Map)
}

func (s complexStructStreamUnsafeMUS) Skip(r muss.Reader) (n int, err error) {
	n, err = unsafe.Bool.Skip(r)
	if err != nil {
		return
	}
	var n1 int
	n1, err = unsafe.Uint8.Skip(r)
	n += n1
	if err != nil {
		return
	}
	n1, err = unsafe.Int8.Skip(r)
	n += n1
	if err != nil {
		return
	}
	n1, err = unsafe.Int16.Skip(r)
	n += n1
	if err != nil {
		return
	}
	n1, err = unsafe.Int32.Skip(r)
	n += n1
	if err != nil {
		return
	}
	n1, err = unsafe.Int64.Skip(r)
	n += n1
	if err != nil {
		return
	}
	n1, err = unsafe.Uint8.Skip(r)
	n += n1
	if err != nil {
		return
	}
	n1, err = unsafe.Uint16.Skip(r)
	n += n1
	if err != nil {
		return
	}
	n1, err = unsafe.Uint32.Skip(r)
	n += n1
	if err != nil {
		return
	}
	n1, err = unsafe.Uint64.Skip(r)
	n += n1
	if err != nil {
		return
	}
	n1, err = unsafe.Float32.Skip(r)
	n += n1
	if err != nil {
		return
	}
	n1, err = unsafe.Float64.Skip(r)
	n += n1
	if err != nil {
		return
	}
	n1, err = unsafe.String.Skip(r)
	n += n1
	if err != nil {
		return
	}
	n1, err = MySliceStreamUnsafeMUS.Skip(r)
	n += n1
	if err != nil {
		return
	}
	n1, err = pkg2.StructStreamUnsafeMUS.Skip(r)
	n += n1
	if err != nil {
		return
	}
	n1, err = InterfaceStreamUnsafeMUS.Skip(r)
	n += n1
	if err != nil {
		return
	}
	n1, err = ord.ByteSlice.Skip(r)
	n += n1
	if err != nil {
		return
	}
	n1, err = slice4JrZ808sg28u396h2wj3PAΞΞ.Skip(r)
	n += n1
	if err != nil {
		return
	}
	n1, err = arrayΔEUbR5kxK3Xh8nZpMbBMΣgΞΞ.Skip(r)
	n += n1
	if err != nil {
		return
	}
	n1, err = ptrAΔt28sCfGLΔUiT2SaΔLeΣAΞΞ.Skip(r)
	n += n1
	if err != nil {
		return
	}
	n1, err = ptrzQDVI7StkgLPuOzDeCU5AAΞΞ.Skip(r)
	n += n1
	if err != nil {
		return
	}
	n1, err = ptrAΔt28sCfGLΔUiT2SaΔLeΣAΞΞ.Skip(r)
	n += n1
	if err != nil {
		return
	}
	n1, err = ptrKZLDWq303uOh5H5ΣUzp3NwΞΞ.Skip(r)
	n += n1
	if err != nil {
		return
	}
	n1, err = mapONAdCODA5Δ3WvvEjVZWP6gΞΞ.Skip(r)
	n += n1
	return
}

var InterfaceImpl1StreamUnsafeMUS = interfaceImpl1StreamUnsafeMUS{}

type interfaceImpl1StreamUnsafeMUS struct{}

func (s interfaceImpl1StreamUnsafeMUS) Marshal(v InterfaceImpl1StreamUnsafe, w muss.Writer) (n int, err error) {
	return
}

func (s interfaceImpl1StreamUnsafeMUS) Unmarshal(r muss.Reader) (v InterfaceImpl1StreamUnsafe, n int, err error) {
	return
}

func (s interfaceImpl1StreamUnsafeMUS) Size(v InterfaceImpl1StreamUnsafe) (size int) {
	return
}

func (s interfaceImpl1StreamUnsafeMUS) Skip(r muss.Reader) (n int, err error) {
	return
}

var InterfaceImpl2StreamUnsafeMUS = interfaceImpl2StreamUnsafeMUS{}

type interfaceImpl2StreamUnsafeMUS struct{}

func (s interfaceImpl2StreamUnsafeMUS) Marshal(v InterfaceImpl2StreamUnsafe, w muss.Writer) (n int, err error) {
	return unsafe.Int.Marshal(int(v), w)
}

func (s interfaceImpl2StreamUnsafeMUS) Unmarshal(r muss.Reader) (v InterfaceImpl2StreamUnsafe, n int, err error) {
	tmp, n, err := unsafe.Int.Unmarshal(r)
	if err != nil {
		return
	}
	v = InterfaceImpl2StreamUnsafe(tmp)
	return
}

func (s interfaceImpl2StreamUnsafeMUS) Size(v InterfaceImpl2StreamUnsafe) (size int) {
	return unsafe.Int.Size(int(v))
}

func (s interfaceImpl2StreamUnsafeMUS) Skip(r muss.Reader) (n int, err error) {
	return unsafe.Int.Skip(r)
}

var InterfaceImpl1StreamUnsafeDTS = dts.New[InterfaceImpl1StreamUnsafe](InterfaceImpl1StreamUnsafeDTM, InterfaceImpl1StreamUnsafeMUS)
var InterfaceImpl2StreamUnsafeDTS = dts.New[InterfaceImpl2StreamUnsafe](InterfaceImpl2StreamUnsafeDTM, InterfaceImpl2StreamUnsafeMUS)

var InterfaceStreamUnsafeMUS = interfaceStreamUnsafeMUS{}

type interfaceStreamUnsafeMUS struct{}

func (s interfaceStreamUnsafeMUS) Marshal(v InterfaceStreamUnsafe, w muss.Writer) (n int, err error) {
	switch t := v.(type) {
	case InterfaceImpl1StreamUnsafe:
		return InterfaceImpl1StreamUnsafeDTS.Marshal(t, w)
	case InterfaceImpl2StreamUnsafe:
		return InterfaceImpl2StreamUnsafeDTS.Marshal(t, w)
	default:
		panic(fmt.Sprintf("unexpected %v type", t))
	}
}

func (s interfaceStreamUnsafeMUS) Unmarshal(r muss.Reader) (v InterfaceStreamUnsafe, n int, err error) {
	dtm, n, err := dts.DTMSer.Unmarshal(r)
	if err != nil {
		return
	}
	var n1 int
	switch dtm {
	case InterfaceImpl1StreamUnsafeDTM:
		v, n1, err = InterfaceImpl1StreamUnsafeDTS.UnmarshalData(r)
	case InterfaceImpl2StreamUnsafeDTM:
		v, n1, err = InterfaceImpl2StreamUnsafeDTS.UnmarshalData(r)
	default:
		err = fmt.Errorf("unexpected %v DTM", dtm)
		return
	}
	n += n1
	return
}

func (s interfaceStreamUnsafeMUS) Size(v InterfaceStreamUnsafe) (size int) {
	switch t := v.(type) {
	case InterfaceImpl1StreamUnsafe:
		return InterfaceImpl1StreamUnsafeDTS.Size(t)
	case InterfaceImpl2StreamUnsafe:
		return InterfaceImpl2StreamUnsafeDTS.Size(t)
	default:
		panic(fmt.Sprintf("unexpected %v type", t))
	}
}

func (s interfaceStreamUnsafeMUS) Skip(r muss.Reader) (n int, err error) {
	dtm, n, err := dts.DTMSer.Unmarshal(r)
	if err != nil {
		return
	}
	var n1 int
	switch dtm {
	case InterfaceImpl1StreamUnsafeDTM:
		n1, err = InterfaceImpl1StreamUnsafeDTS.SkipData(r)
	case InterfaceImpl2StreamUnsafeDTM:
		n1, err = InterfaceImpl2StreamUnsafeDTS.SkipData(r)
	default:
		err = fmt.Errorf("unexpected %v DTM", dtm)
		return
	}
	n += n1
	return
}
