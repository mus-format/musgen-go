// Code generated by musgen-go. DO NOT EDIT.

package pkg1

import (
	"fmt"

	com "github.com/mus-format/common-go"
	dts "github.com/mus-format/mus-dts-go"
	"github.com/mus-format/mus-go/ord"
	"github.com/mus-format/mus-go/raw"
	"github.com/mus-format/mus-go/varint"
	"github.com/mus-format/musgen-go/testdata"
	"github.com/mus-format/musgen-go/testdata/pkg2"
)

var (
	arrayRuX3ffcBMbWzRHkOFcnegAΞΞ      = ord.NewArraySer[[3]int, int](3, raw.Int)
	arrayZZrMuafde4zs9nWQ9V29GQΞΞ      = ord.NewValidArraySerWith[[3]int, int](3, raw.Int, raw.Int, com.ValidatorFn[int](testdata.ValidateZeroValue[int]))
	arraycrM9UZcGb9US7pO18XSo2wΞΞ      = ord.NewArraySerWith[[3]int, int](3, raw.Int, varint.Int)
	arrayr4wy7nYWZsCSpVj9NWA6awΞΞ      = ord.NewArraySer[[3]int, int](3, varint.Int)
	arrayrGTVpvMKsXWK7EdLjJ2VwQΞΞ      = ord.NewArraySer[[3]int, int](3, varint.Int)
	arrayrwzdrNpi3ynΔqO1zΔn7rmwΞΞ      = ord.NewValidArraySer[[3]int, int](3, varint.Int, com.ValidatorFn[int](testdata.ValidateZeroValue[int]))
	byte_sliceDcCgbxlDhn4GkcmK8YCyΔAΞΞ = ord.NewValidByteSliceSer(com.ValidatorFn[int](testdata.ValidateLength))
	byte_sliceoQ9IRuMdcV5ml2YRw53jjwΞΞ = ord.NewValidByteSliceSerWith(raw.Int, com.ValidatorFn[int](testdata.ValidateLength))
	byte_sliceuivYF4GycfHkNaAtJaA7gAΞΞ = ord.NewByteSliceSerWith(raw.Int)
	map0LSMnwmCsOA77HuΣMun3JQΞΞ        = ord.NewMapSer[int, int](varint.Int, varint.Int)
	map3PMuzhUAOypD4DqSnnWKagΞΞ        = ord.NewValidMapSer[int, int](varint.Int, varint.Int, nil, nil, com.ValidatorFn[int](testdata.ValidateZeroValue[int]))
	map43fUS2Δt05YvrYGcEuvKNAΞΞ        = ord.NewMapSer[int, int](varint.Int, raw.Int)
	mapFANab1bxFDU2CxNSnYEESQΞΞ        = ord.NewValidMapSer[int, int](varint.Int, varint.Int, com.ValidatorFn[int](testdata.ValidateLength), nil, nil)
	mapNJclDG86D52Pjt61euotyQΞΞ        = ord.NewMapSer[float32, map[IntAlias][]SimpleStruct](varint.Float32, mapjyspScQJtnHHo4GtXpfbuwΞΞ)
	mapVybLwOR8yjz9WUosywSOΔwΞΞ        = ord.NewMapSer[int, int](varint.Int, varint.Int)
	mapgΔPfXh6ykvALhZI24oΣUwgΞΞ        = ord.NewValidMapSer[int, int](varint.Int, varint.Int, nil, com.ValidatorFn[int](testdata.ValidateZeroValue[int]), nil)
	maph2OI1HM8rEDN92oicn3y0QΞΞ        = ord.NewMapSerWith[int, int](raw.Int, varint.Int, varint.Int)
	mapjyspScQJtnHHo4GtXpfbuwΞΞ        = ord.NewMapSer[IntAlias, []SimpleStruct](IntAliasMUS, sliceJ9mM3TwH9NGSRg9dRM34dAΞΞ)
	mapsHWUiae8MVARLFKhf3bGHwΞΞ        = ord.NewMapSer[int, int](raw.Int, varint.Int)
	mapx2Di83OYuEH641nztVvsFgΞΞ        = ord.NewValidMapSerWith[int, int](raw.Int, raw.Int, raw.Int, com.ValidatorFn[int](testdata.ValidateLength), com.ValidatorFn[int](testdata.ValidateZeroValue[int]), com.ValidatorFn[int](testdata.ValidateZeroValue[int]))
	ptr4ΣGeyl4njXOpw7dXGWlhlwΞΞ        = ord.NewPtrSer[*Interface](ptrRt47LK07JBJ3WPm4bGwgvgΞΞ)
	ptrLGSRJu6LxqOYCY4EvJlaXgΞΞ        = ord.NewPtrSer[int](varint.Int)
	ptrNH6kCQLrIU4OIzE2n0WW3gΞΞ        = ord.NewPtrSer[string](ord.String)
	ptrRt47LK07JBJ3WPm4bGwgvgΞΞ        = ord.NewPtrSer[Interface](InterfaceMUS)
	ptreTXEΔQvZPl1AWyH50l7g8QΞΞ        = ord.NewPtrSer[int](raw.Int)
	ptrikbRqA7BO81F7es2ThTZΔgΞΞ        = ord.NewPtrSer[[3]int](arrayr4wy7nYWZsCSpVj9NWA6awΞΞ)
	ptriwXcXXMJxv0fwmlU8fBUFQΞΞ        = ord.NewPtrSer[int](varint.Int)
	ptrvDcVHNNl1fY23xdΔryHx7wΞΞ        = ord.NewPtrSer[SimpleStruct](SimpleStructMUS)
	slice7v8xiCJyDayHEcMoBUAERQΞΞ      = ord.NewSliceSerWith[int](raw.Int, varint.Int)
	slice8Bmgo57SJrl1jkVk3uFkvwΞΞ      = ord.NewValidSliceSer[int](varint.Int, nil, com.ValidatorFn[int](testdata.ValidateZeroValue[int]))
	sliceJ9mM3TwH9NGSRg9dRM34dAΞΞ      = ord.NewSliceSer[SimpleStruct](SimpleStructMUS)
	sliceRJD1qΔgsYzv84V3Gfz6c0wΞΞ      = ord.NewSliceSer[int](raw.Int)
	sliceXsiMRO2Fc4hG6R7wrB7GIAΞΞ      = ord.NewValidSliceSer[int](varint.Int, com.ValidatorFn[int](testdata.ValidateLength), nil)
	slicenXQ4BhwΔjyAbWO9CVN0bXgΞΞ      = ord.NewValidSliceSerWith[int](raw.Int, raw.Int, com.ValidatorFn[int](testdata.ValidateLength), com.ValidatorFn[int](testdata.ValidateZeroValue[int]))
	slicewNkFf0X21pMEy6cgry3oZQΞΞ      = ord.NewSliceSer[int](varint.Int)
	string6DO1S6ZwcLfItΣZS8XhRmwΞΞ     = ord.NewValidStringSerWith(raw.Int, com.ValidatorFn[int](testdata.ValidateLength))
	stringoykcSTYdDaq1pqAVTzfp3QΞΞ     = ord.NewValidStringSer(com.ValidatorFn[int](testdata.ValidateLength))
	stringpoyvVnsIiYmxsyLX8PnMRQΞΞ     = ord.NewStringSerWith(raw.Int)
)

var IntAliasMUS = intAliasMUS{}

type intAliasMUS struct{}

func (s intAliasMUS) Marshal(v IntAlias, bs []byte) (n int) {
	return varint.Int.Marshal(int(v), bs)
}

func (s intAliasMUS) Unmarshal(bs []byte) (v IntAlias, n int, err error) {
	tmp, n, err := varint.Int.Unmarshal(bs)
	if err != nil {
		return
	}
	v = IntAlias(tmp)
	return
}

func (s intAliasMUS) Size(v IntAlias) (size int) {
	return varint.Int.Size(int(v))
}

func (s intAliasMUS) Skip(bs []byte) (n int, err error) {
	return varint.Int.Skip(bs)
}

var RawIntAliasMUS = rawIntAliasMUS{}

type rawIntAliasMUS struct{}

func (s rawIntAliasMUS) Marshal(v RawIntAlias, bs []byte) (n int) {
	return raw.Int.Marshal(int(v), bs)
}

func (s rawIntAliasMUS) Unmarshal(bs []byte) (v RawIntAlias, n int, err error) {
	tmp, n, err := raw.Int.Unmarshal(bs)
	if err != nil {
		return
	}
	v = RawIntAlias(tmp)
	return
}

func (s rawIntAliasMUS) Size(v RawIntAlias) (size int) {
	return raw.Int.Size(int(v))
}

func (s rawIntAliasMUS) Skip(bs []byte) (n int, err error) {
	return raw.Int.Skip(bs)
}

var VarintPositiveIntAliasMUS = varintPositiveIntAliasMUS{}

type varintPositiveIntAliasMUS struct{}

func (s varintPositiveIntAliasMUS) Marshal(v VarintPositiveIntAlias, bs []byte) (n int) {
	return varint.PositiveInt.Marshal(int(v), bs)
}

func (s varintPositiveIntAliasMUS) Unmarshal(bs []byte) (v VarintPositiveIntAlias, n int, err error) {
	tmp, n, err := varint.PositiveInt.Unmarshal(bs)
	if err != nil {
		return
	}
	v = VarintPositiveIntAlias(tmp)
	return
}

func (s varintPositiveIntAliasMUS) Size(v VarintPositiveIntAlias) (size int) {
	return varint.PositiveInt.Size(int(v))
}

func (s varintPositiveIntAliasMUS) Skip(bs []byte) (n int, err error) {
	return varint.PositiveInt.Skip(bs)
}

var ValidIntAliasMUS = validIntAliasMUS{}

type validIntAliasMUS struct{}

func (s validIntAliasMUS) Marshal(v ValidIntAlias, bs []byte) (n int) {
	return varint.Int.Marshal(int(v), bs)
}

func (s validIntAliasMUS) Unmarshal(bs []byte) (v ValidIntAlias, n int, err error) {
	tmp, n, err := varint.Int.Unmarshal(bs)
	if err != nil {
		return
	}
	v = ValidIntAlias(tmp)
	err = testdata.ValidateZeroValue(v)
	return
}

func (s validIntAliasMUS) Size(v ValidIntAlias) (size int) {
	return varint.Int.Size(int(v))
}

func (s validIntAliasMUS) Skip(bs []byte) (n int, err error) {
	return varint.Int.Skip(bs)
}

var AllIntAliasMUS = allIntAliasMUS{}

type allIntAliasMUS struct{}

func (s allIntAliasMUS) Marshal(v AllIntAlias, bs []byte) (n int) {
	return raw.Int.Marshal(int(v), bs)
}

func (s allIntAliasMUS) Unmarshal(bs []byte) (v AllIntAlias, n int, err error) {
	tmp, n, err := raw.Int.Unmarshal(bs)
	if err != nil {
		return
	}
	v = AllIntAlias(tmp)
	err = testdata.ValidateZeroValue(v)
	return
}

func (s allIntAliasMUS) Size(v AllIntAlias) (size int) {
	return raw.Int.Size(int(v))
}

func (s allIntAliasMUS) Skip(bs []byte) (n int, err error) {
	return raw.Int.Skip(bs)
}

var StringAliasMUS = stringAliasMUS{}

type stringAliasMUS struct{}

func (s stringAliasMUS) Marshal(v StringAlias, bs []byte) (n int) {
	return ord.String.Marshal(string(v), bs)
}

func (s stringAliasMUS) Unmarshal(bs []byte) (v StringAlias, n int, err error) {
	tmp, n, err := ord.String.Unmarshal(bs)
	if err != nil {
		return
	}
	v = StringAlias(tmp)
	return
}

func (s stringAliasMUS) Size(v StringAlias) (size int) {
	return ord.String.Size(string(v))
}

func (s stringAliasMUS) Skip(bs []byte) (n int, err error) {
	return ord.String.Skip(bs)
}

var LenEncodingStringAliasMUS = lenEncodingStringAliasMUS{}

type lenEncodingStringAliasMUS struct{}

func (s lenEncodingStringAliasMUS) Marshal(v LenEncodingStringAlias, bs []byte) (n int) {
	return stringpoyvVnsIiYmxsyLX8PnMRQΞΞ.Marshal(string(v), bs)
}

func (s lenEncodingStringAliasMUS) Unmarshal(bs []byte) (v LenEncodingStringAlias, n int, err error) {
	tmp, n, err := stringpoyvVnsIiYmxsyLX8PnMRQΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = LenEncodingStringAlias(tmp)
	return
}

func (s lenEncodingStringAliasMUS) Size(v LenEncodingStringAlias) (size int) {
	return stringpoyvVnsIiYmxsyLX8PnMRQΞΞ.Size(string(v))
}

func (s lenEncodingStringAliasMUS) Skip(bs []byte) (n int, err error) {
	return stringpoyvVnsIiYmxsyLX8PnMRQΞΞ.Skip(bs)
}

var LenValidStringAliasMUS = lenValidStringAliasMUS{}

type lenValidStringAliasMUS struct{}

func (s lenValidStringAliasMUS) Marshal(v LenValidStringAlias, bs []byte) (n int) {
	return stringoykcSTYdDaq1pqAVTzfp3QΞΞ.Marshal(string(v), bs)
}

func (s lenValidStringAliasMUS) Unmarshal(bs []byte) (v LenValidStringAlias, n int, err error) {
	tmp, n, err := stringoykcSTYdDaq1pqAVTzfp3QΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = LenValidStringAlias(tmp)
	return
}

func (s lenValidStringAliasMUS) Size(v LenValidStringAlias) (size int) {
	return stringoykcSTYdDaq1pqAVTzfp3QΞΞ.Size(string(v))
}

func (s lenValidStringAliasMUS) Skip(bs []byte) (n int, err error) {
	return stringoykcSTYdDaq1pqAVTzfp3QΞΞ.Skip(bs)
}

var ValidStringAliasMUS = validStringAliasMUS{}

type validStringAliasMUS struct{}

func (s validStringAliasMUS) Marshal(v ValidStringAlias, bs []byte) (n int) {
	return ord.String.Marshal(string(v), bs)
}

func (s validStringAliasMUS) Unmarshal(bs []byte) (v ValidStringAlias, n int, err error) {
	tmp, n, err := ord.String.Unmarshal(bs)
	if err != nil {
		return
	}
	v = ValidStringAlias(tmp)
	err = testdata.ValidateZeroValue(v)
	return
}

func (s validStringAliasMUS) Size(v ValidStringAlias) (size int) {
	return ord.String.Size(string(v))
}

func (s validStringAliasMUS) Skip(bs []byte) (n int, err error) {
	return ord.String.Skip(bs)
}

var AllStringAliasMUS = allStringAliasMUS{}

type allStringAliasMUS struct{}

func (s allStringAliasMUS) Marshal(v AllStringAlias, bs []byte) (n int) {
	return string6DO1S6ZwcLfItΣZS8XhRmwΞΞ.Marshal(string(v), bs)
}

func (s allStringAliasMUS) Unmarshal(bs []byte) (v AllStringAlias, n int, err error) {
	tmp, n, err := string6DO1S6ZwcLfItΣZS8XhRmwΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = AllStringAlias(tmp)
	err = testdata.ValidateZeroValue(v)
	return
}

func (s allStringAliasMUS) Size(v AllStringAlias) (size int) {
	return string6DO1S6ZwcLfItΣZS8XhRmwΞΞ.Size(string(v))
}

func (s allStringAliasMUS) Skip(bs []byte) (n int, err error) {
	return string6DO1S6ZwcLfItΣZS8XhRmwΞΞ.Skip(bs)
}

var ByteSliceAliasMUS = byteSliceAliasMUS{}

type byteSliceAliasMUS struct{}

func (s byteSliceAliasMUS) Marshal(v ByteSliceAlias, bs []byte) (n int) {
	return ord.ByteSlice.Marshal([]uint8(v), bs)
}

func (s byteSliceAliasMUS) Unmarshal(bs []byte) (v ByteSliceAlias, n int, err error) {
	tmp, n, err := ord.ByteSlice.Unmarshal(bs)
	if err != nil {
		return
	}
	v = ByteSliceAlias(tmp)
	return
}

func (s byteSliceAliasMUS) Size(v ByteSliceAlias) (size int) {
	return ord.ByteSlice.Size([]uint8(v))
}

func (s byteSliceAliasMUS) Skip(bs []byte) (n int, err error) {
	return ord.ByteSlice.Skip(bs)
}

var LenEncodingByteSliceAliasMUS = lenEncodingByteSliceAliasMUS{}

type lenEncodingByteSliceAliasMUS struct{}

func (s lenEncodingByteSliceAliasMUS) Marshal(v LenEncodingByteSliceAlias, bs []byte) (n int) {
	return byte_sliceuivYF4GycfHkNaAtJaA7gAΞΞ.Marshal([]uint8(v), bs)
}

func (s lenEncodingByteSliceAliasMUS) Unmarshal(bs []byte) (v LenEncodingByteSliceAlias, n int, err error) {
	tmp, n, err := byte_sliceuivYF4GycfHkNaAtJaA7gAΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = LenEncodingByteSliceAlias(tmp)
	return
}

func (s lenEncodingByteSliceAliasMUS) Size(v LenEncodingByteSliceAlias) (size int) {
	return byte_sliceuivYF4GycfHkNaAtJaA7gAΞΞ.Size([]uint8(v))
}

func (s lenEncodingByteSliceAliasMUS) Skip(bs []byte) (n int, err error) {
	return byte_sliceuivYF4GycfHkNaAtJaA7gAΞΞ.Skip(bs)
}

var LenValidByteSliceAliasMUS = lenValidByteSliceAliasMUS{}

type lenValidByteSliceAliasMUS struct{}

func (s lenValidByteSliceAliasMUS) Marshal(v LenValidByteSliceAlias, bs []byte) (n int) {
	return byte_sliceDcCgbxlDhn4GkcmK8YCyΔAΞΞ.Marshal([]uint8(v), bs)
}

func (s lenValidByteSliceAliasMUS) Unmarshal(bs []byte) (v LenValidByteSliceAlias, n int, err error) {
	tmp, n, err := byte_sliceDcCgbxlDhn4GkcmK8YCyΔAΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = LenValidByteSliceAlias(tmp)
	return
}

func (s lenValidByteSliceAliasMUS) Size(v LenValidByteSliceAlias) (size int) {
	return byte_sliceDcCgbxlDhn4GkcmK8YCyΔAΞΞ.Size([]uint8(v))
}

func (s lenValidByteSliceAliasMUS) Skip(bs []byte) (n int, err error) {
	return byte_sliceDcCgbxlDhn4GkcmK8YCyΔAΞΞ.Skip(bs)
}

var ValidByteSliceAliasMUS = validByteSliceAliasMUS{}

type validByteSliceAliasMUS struct{}

func (s validByteSliceAliasMUS) Marshal(v ValidByteSliceAlias, bs []byte) (n int) {
	return ord.ByteSlice.Marshal([]uint8(v), bs)
}

func (s validByteSliceAliasMUS) Unmarshal(bs []byte) (v ValidByteSliceAlias, n int, err error) {
	tmp, n, err := ord.ByteSlice.Unmarshal(bs)
	if err != nil {
		return
	}
	v = ValidByteSliceAlias(tmp)
	err = ValidateByteSlice1(v)
	return
}

func (s validByteSliceAliasMUS) Size(v ValidByteSliceAlias) (size int) {
	return ord.ByteSlice.Size([]uint8(v))
}

func (s validByteSliceAliasMUS) Skip(bs []byte) (n int, err error) {
	return ord.ByteSlice.Skip(bs)
}

var AllByteSliceAliasMUS = allByteSliceAliasMUS{}

type allByteSliceAliasMUS struct{}

func (s allByteSliceAliasMUS) Marshal(v AllByteSliceAlias, bs []byte) (n int) {
	return byte_sliceoQ9IRuMdcV5ml2YRw53jjwΞΞ.Marshal([]uint8(v), bs)
}

func (s allByteSliceAliasMUS) Unmarshal(bs []byte) (v AllByteSliceAlias, n int, err error) {
	tmp, n, err := byte_sliceoQ9IRuMdcV5ml2YRw53jjwΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = AllByteSliceAlias(tmp)
	err = ValidateByteSlice2(v)
	return
}

func (s allByteSliceAliasMUS) Size(v AllByteSliceAlias) (size int) {
	return byte_sliceoQ9IRuMdcV5ml2YRw53jjwΞΞ.Size([]uint8(v))
}

func (s allByteSliceAliasMUS) Skip(bs []byte) (n int, err error) {
	return byte_sliceoQ9IRuMdcV5ml2YRw53jjwΞΞ.Skip(bs)
}

var SliceAliasMUS = sliceAliasMUS{}

type sliceAliasMUS struct{}

func (s sliceAliasMUS) Marshal(v SliceAlias, bs []byte) (n int) {
	return slicewNkFf0X21pMEy6cgry3oZQΞΞ.Marshal([]int(v), bs)
}

func (s sliceAliasMUS) Unmarshal(bs []byte) (v SliceAlias, n int, err error) {
	tmp, n, err := slicewNkFf0X21pMEy6cgry3oZQΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = SliceAlias(tmp)
	return
}

func (s sliceAliasMUS) Size(v SliceAlias) (size int) {
	return slicewNkFf0X21pMEy6cgry3oZQΞΞ.Size([]int(v))
}

func (s sliceAliasMUS) Skip(bs []byte) (n int, err error) {
	return slicewNkFf0X21pMEy6cgry3oZQΞΞ.Skip(bs)
}

var LenEncodingSliceAliasMUS = lenEncodingSliceAliasMUS{}

type lenEncodingSliceAliasMUS struct{}

func (s lenEncodingSliceAliasMUS) Marshal(v LenEncodingSliceAlias, bs []byte) (n int) {
	return slice7v8xiCJyDayHEcMoBUAERQΞΞ.Marshal([]int(v), bs)
}

func (s lenEncodingSliceAliasMUS) Unmarshal(bs []byte) (v LenEncodingSliceAlias, n int, err error) {
	tmp, n, err := slice7v8xiCJyDayHEcMoBUAERQΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = LenEncodingSliceAlias(tmp)
	return
}

func (s lenEncodingSliceAliasMUS) Size(v LenEncodingSliceAlias) (size int) {
	return slice7v8xiCJyDayHEcMoBUAERQΞΞ.Size([]int(v))
}

func (s lenEncodingSliceAliasMUS) Skip(bs []byte) (n int, err error) {
	return slice7v8xiCJyDayHEcMoBUAERQΞΞ.Skip(bs)
}

var LenValidSliceAliasMUS = lenValidSliceAliasMUS{}

type lenValidSliceAliasMUS struct{}

func (s lenValidSliceAliasMUS) Marshal(v LenValidSliceAlias, bs []byte) (n int) {
	return sliceXsiMRO2Fc4hG6R7wrB7GIAΞΞ.Marshal([]int(v), bs)
}

func (s lenValidSliceAliasMUS) Unmarshal(bs []byte) (v LenValidSliceAlias, n int, err error) {
	tmp, n, err := sliceXsiMRO2Fc4hG6R7wrB7GIAΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = LenValidSliceAlias(tmp)
	return
}

func (s lenValidSliceAliasMUS) Size(v LenValidSliceAlias) (size int) {
	return sliceXsiMRO2Fc4hG6R7wrB7GIAΞΞ.Size([]int(v))
}

func (s lenValidSliceAliasMUS) Skip(bs []byte) (n int, err error) {
	return sliceXsiMRO2Fc4hG6R7wrB7GIAΞΞ.Skip(bs)
}

var ElemEncodingSliceAliasMUS = elemEncodingSliceAliasMUS{}

type elemEncodingSliceAliasMUS struct{}

func (s elemEncodingSliceAliasMUS) Marshal(v ElemEncodingSliceAlias, bs []byte) (n int) {
	return sliceRJD1qΔgsYzv84V3Gfz6c0wΞΞ.Marshal([]int(v), bs)
}

func (s elemEncodingSliceAliasMUS) Unmarshal(bs []byte) (v ElemEncodingSliceAlias, n int, err error) {
	tmp, n, err := sliceRJD1qΔgsYzv84V3Gfz6c0wΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = ElemEncodingSliceAlias(tmp)
	return
}

func (s elemEncodingSliceAliasMUS) Size(v ElemEncodingSliceAlias) (size int) {
	return sliceRJD1qΔgsYzv84V3Gfz6c0wΞΞ.Size([]int(v))
}

func (s elemEncodingSliceAliasMUS) Skip(bs []byte) (n int, err error) {
	return sliceRJD1qΔgsYzv84V3Gfz6c0wΞΞ.Skip(bs)
}

var ElemValidSliceAliasMUS = elemValidSliceAliasMUS{}

type elemValidSliceAliasMUS struct{}

func (s elemValidSliceAliasMUS) Marshal(v ElemValidSliceAlias, bs []byte) (n int) {
	return slice8Bmgo57SJrl1jkVk3uFkvwΞΞ.Marshal([]int(v), bs)
}

func (s elemValidSliceAliasMUS) Unmarshal(bs []byte) (v ElemValidSliceAlias, n int, err error) {
	tmp, n, err := slice8Bmgo57SJrl1jkVk3uFkvwΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = ElemValidSliceAlias(tmp)
	return
}

func (s elemValidSliceAliasMUS) Size(v ElemValidSliceAlias) (size int) {
	return slice8Bmgo57SJrl1jkVk3uFkvwΞΞ.Size([]int(v))
}

func (s elemValidSliceAliasMUS) Skip(bs []byte) (n int, err error) {
	return slice8Bmgo57SJrl1jkVk3uFkvwΞΞ.Skip(bs)
}

var AllSliceAliasMUS = allSliceAliasMUS{}

type allSliceAliasMUS struct{}

func (s allSliceAliasMUS) Marshal(v AllSliceAlias, bs []byte) (n int) {
	return slicenXQ4BhwΔjyAbWO9CVN0bXgΞΞ.Marshal([]int(v), bs)
}

func (s allSliceAliasMUS) Unmarshal(bs []byte) (v AllSliceAlias, n int, err error) {
	tmp, n, err := slicenXQ4BhwΔjyAbWO9CVN0bXgΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = AllSliceAlias(tmp)
	return
}

func (s allSliceAliasMUS) Size(v AllSliceAlias) (size int) {
	return slicenXQ4BhwΔjyAbWO9CVN0bXgΞΞ.Size([]int(v))
}

func (s allSliceAliasMUS) Skip(bs []byte) (n int, err error) {
	return slicenXQ4BhwΔjyAbWO9CVN0bXgΞΞ.Skip(bs)
}

var ArrayAliasMUS = arrayAliasMUS{}

type arrayAliasMUS struct{}

func (s arrayAliasMUS) Marshal(v ArrayAlias, bs []byte) (n int) {
	return arrayr4wy7nYWZsCSpVj9NWA6awΞΞ.Marshal([3]int(v), bs)
}

func (s arrayAliasMUS) Unmarshal(bs []byte) (v ArrayAlias, n int, err error) {
	tmp, n, err := arrayr4wy7nYWZsCSpVj9NWA6awΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = ArrayAlias(tmp)
	return
}

func (s arrayAliasMUS) Size(v ArrayAlias) (size int) {
	return arrayr4wy7nYWZsCSpVj9NWA6awΞΞ.Size([3]int(v))
}

func (s arrayAliasMUS) Skip(bs []byte) (n int, err error) {
	return arrayr4wy7nYWZsCSpVj9NWA6awΞΞ.Skip(bs)
}

var LenEncodingArrayAliasMUS = lenEncodingArrayAliasMUS{}

type lenEncodingArrayAliasMUS struct{}

func (s lenEncodingArrayAliasMUS) Marshal(v LenEncodingArrayAlias, bs []byte) (n int) {
	return arraycrM9UZcGb9US7pO18XSo2wΞΞ.Marshal([3]int(v), bs)
}

func (s lenEncodingArrayAliasMUS) Unmarshal(bs []byte) (v LenEncodingArrayAlias, n int, err error) {
	tmp, n, err := arraycrM9UZcGb9US7pO18XSo2wΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = LenEncodingArrayAlias(tmp)
	return
}

func (s lenEncodingArrayAliasMUS) Size(v LenEncodingArrayAlias) (size int) {
	return arraycrM9UZcGb9US7pO18XSo2wΞΞ.Size([3]int(v))
}

func (s lenEncodingArrayAliasMUS) Skip(bs []byte) (n int, err error) {
	return arraycrM9UZcGb9US7pO18XSo2wΞΞ.Skip(bs)
}

var ElemEncodingArrayAliasMUS = elemEncodingArrayAliasMUS{}

type elemEncodingArrayAliasMUS struct{}

func (s elemEncodingArrayAliasMUS) Marshal(v ElemEncodingArrayAlias, bs []byte) (n int) {
	return arrayRuX3ffcBMbWzRHkOFcnegAΞΞ.Marshal([3]int(v), bs)
}

func (s elemEncodingArrayAliasMUS) Unmarshal(bs []byte) (v ElemEncodingArrayAlias, n int, err error) {
	tmp, n, err := arrayRuX3ffcBMbWzRHkOFcnegAΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = ElemEncodingArrayAlias(tmp)
	return
}

func (s elemEncodingArrayAliasMUS) Size(v ElemEncodingArrayAlias) (size int) {
	return arrayRuX3ffcBMbWzRHkOFcnegAΞΞ.Size([3]int(v))
}

func (s elemEncodingArrayAliasMUS) Skip(bs []byte) (n int, err error) {
	return arrayRuX3ffcBMbWzRHkOFcnegAΞΞ.Skip(bs)
}

var ElemValidArrayAliasMUS = elemValidArrayAliasMUS{}

type elemValidArrayAliasMUS struct{}

func (s elemValidArrayAliasMUS) Marshal(v ElemValidArrayAlias, bs []byte) (n int) {
	return arrayrwzdrNpi3ynΔqO1zΔn7rmwΞΞ.Marshal([3]int(v), bs)
}

func (s elemValidArrayAliasMUS) Unmarshal(bs []byte) (v ElemValidArrayAlias, n int, err error) {
	tmp, n, err := arrayrwzdrNpi3ynΔqO1zΔn7rmwΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = ElemValidArrayAlias(tmp)
	return
}

func (s elemValidArrayAliasMUS) Size(v ElemValidArrayAlias) (size int) {
	return arrayrwzdrNpi3ynΔqO1zΔn7rmwΞΞ.Size([3]int(v))
}

func (s elemValidArrayAliasMUS) Skip(bs []byte) (n int, err error) {
	return arrayrwzdrNpi3ynΔqO1zΔn7rmwΞΞ.Skip(bs)
}

var ValidArrayAliasMUS = validArrayAliasMUS{}

type validArrayAliasMUS struct{}

func (s validArrayAliasMUS) Marshal(v ValidArrayAlias, bs []byte) (n int) {
	return arrayrGTVpvMKsXWK7EdLjJ2VwQΞΞ.Marshal([3]int(v), bs)
}

func (s validArrayAliasMUS) Unmarshal(bs []byte) (v ValidArrayAlias, n int, err error) {
	tmp, n, err := arrayrGTVpvMKsXWK7EdLjJ2VwQΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = ValidArrayAlias(tmp)
	err = testdata.ValidateZeroValue[[3]int](v)
	return
}

func (s validArrayAliasMUS) Size(v ValidArrayAlias) (size int) {
	return arrayrGTVpvMKsXWK7EdLjJ2VwQΞΞ.Size([3]int(v))
}

func (s validArrayAliasMUS) Skip(bs []byte) (n int, err error) {
	return arrayrGTVpvMKsXWK7EdLjJ2VwQΞΞ.Skip(bs)
}

var AllArrayAliasMUS = allArrayAliasMUS{}

type allArrayAliasMUS struct{}

func (s allArrayAliasMUS) Marshal(v AllArrayAlias, bs []byte) (n int) {
	return arrayZZrMuafde4zs9nWQ9V29GQΞΞ.Marshal([3]int(v), bs)
}

func (s allArrayAliasMUS) Unmarshal(bs []byte) (v AllArrayAlias, n int, err error) {
	tmp, n, err := arrayZZrMuafde4zs9nWQ9V29GQΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = AllArrayAlias(tmp)
	err = testdata.ValidateZeroValue[[3]int](v)
	return
}

func (s allArrayAliasMUS) Size(v AllArrayAlias) (size int) {
	return arrayZZrMuafde4zs9nWQ9V29GQΞΞ.Size([3]int(v))
}

func (s allArrayAliasMUS) Skip(bs []byte) (n int, err error) {
	return arrayZZrMuafde4zs9nWQ9V29GQΞΞ.Skip(bs)
}

var MapAliasMUS = mapAliasMUS{}

type mapAliasMUS struct{}

func (s mapAliasMUS) Marshal(v MapAlias, bs []byte) (n int) {
	return map0LSMnwmCsOA77HuΣMun3JQΞΞ.Marshal(map[int]int(v), bs)
}

func (s mapAliasMUS) Unmarshal(bs []byte) (v MapAlias, n int, err error) {
	tmp, n, err := map0LSMnwmCsOA77HuΣMun3JQΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = MapAlias(tmp)
	return
}

func (s mapAliasMUS) Size(v MapAlias) (size int) {
	return map0LSMnwmCsOA77HuΣMun3JQΞΞ.Size(map[int]int(v))
}

func (s mapAliasMUS) Skip(bs []byte) (n int, err error) {
	return map0LSMnwmCsOA77HuΣMun3JQΞΞ.Skip(bs)
}

var LenEncodingMapAliasMUS = lenEncodingMapAliasMUS{}

type lenEncodingMapAliasMUS struct{}

func (s lenEncodingMapAliasMUS) Marshal(v LenEncodingMapAlias, bs []byte) (n int) {
	return maph2OI1HM8rEDN92oicn3y0QΞΞ.Marshal(map[int]int(v), bs)
}

func (s lenEncodingMapAliasMUS) Unmarshal(bs []byte) (v LenEncodingMapAlias, n int, err error) {
	tmp, n, err := maph2OI1HM8rEDN92oicn3y0QΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = LenEncodingMapAlias(tmp)
	return
}

func (s lenEncodingMapAliasMUS) Size(v LenEncodingMapAlias) (size int) {
	return maph2OI1HM8rEDN92oicn3y0QΞΞ.Size(map[int]int(v))
}

func (s lenEncodingMapAliasMUS) Skip(bs []byte) (n int, err error) {
	return maph2OI1HM8rEDN92oicn3y0QΞΞ.Skip(bs)
}

var LenValidMapAliasMUS = lenValidMapAliasMUS{}

type lenValidMapAliasMUS struct{}

func (s lenValidMapAliasMUS) Marshal(v LenValidMapAlias, bs []byte) (n int) {
	return mapFANab1bxFDU2CxNSnYEESQΞΞ.Marshal(map[int]int(v), bs)
}

func (s lenValidMapAliasMUS) Unmarshal(bs []byte) (v LenValidMapAlias, n int, err error) {
	tmp, n, err := mapFANab1bxFDU2CxNSnYEESQΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = LenValidMapAlias(tmp)
	return
}

func (s lenValidMapAliasMUS) Size(v LenValidMapAlias) (size int) {
	return mapFANab1bxFDU2CxNSnYEESQΞΞ.Size(map[int]int(v))
}

func (s lenValidMapAliasMUS) Skip(bs []byte) (n int, err error) {
	return mapFANab1bxFDU2CxNSnYEESQΞΞ.Skip(bs)
}

var KeyEncodingMapAliasMUS = keyEncodingMapAliasMUS{}

type keyEncodingMapAliasMUS struct{}

func (s keyEncodingMapAliasMUS) Marshal(v KeyEncodingMapAlias, bs []byte) (n int) {
	return mapsHWUiae8MVARLFKhf3bGHwΞΞ.Marshal(map[int]int(v), bs)
}

func (s keyEncodingMapAliasMUS) Unmarshal(bs []byte) (v KeyEncodingMapAlias, n int, err error) {
	tmp, n, err := mapsHWUiae8MVARLFKhf3bGHwΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = KeyEncodingMapAlias(tmp)
	return
}

func (s keyEncodingMapAliasMUS) Size(v KeyEncodingMapAlias) (size int) {
	return mapsHWUiae8MVARLFKhf3bGHwΞΞ.Size(map[int]int(v))
}

func (s keyEncodingMapAliasMUS) Skip(bs []byte) (n int, err error) {
	return mapsHWUiae8MVARLFKhf3bGHwΞΞ.Skip(bs)
}

var KeyValidMapAliasMUS = keyValidMapAliasMUS{}

type keyValidMapAliasMUS struct{}

func (s keyValidMapAliasMUS) Marshal(v KeyValidMapAlias, bs []byte) (n int) {
	return mapgΔPfXh6ykvALhZI24oΣUwgΞΞ.Marshal(map[int]int(v), bs)
}

func (s keyValidMapAliasMUS) Unmarshal(bs []byte) (v KeyValidMapAlias, n int, err error) {
	tmp, n, err := mapgΔPfXh6ykvALhZI24oΣUwgΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = KeyValidMapAlias(tmp)
	return
}

func (s keyValidMapAliasMUS) Size(v KeyValidMapAlias) (size int) {
	return mapgΔPfXh6ykvALhZI24oΣUwgΞΞ.Size(map[int]int(v))
}

func (s keyValidMapAliasMUS) Skip(bs []byte) (n int, err error) {
	return mapgΔPfXh6ykvALhZI24oΣUwgΞΞ.Skip(bs)
}

var ElemEncodingMapAliasMUS = elemEncodingMapAliasMUS{}

type elemEncodingMapAliasMUS struct{}

func (s elemEncodingMapAliasMUS) Marshal(v ElemEncodingMapAlias, bs []byte) (n int) {
	return map43fUS2Δt05YvrYGcEuvKNAΞΞ.Marshal(map[int]int(v), bs)
}

func (s elemEncodingMapAliasMUS) Unmarshal(bs []byte) (v ElemEncodingMapAlias, n int, err error) {
	tmp, n, err := map43fUS2Δt05YvrYGcEuvKNAΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = ElemEncodingMapAlias(tmp)
	return
}

func (s elemEncodingMapAliasMUS) Size(v ElemEncodingMapAlias) (size int) {
	return map43fUS2Δt05YvrYGcEuvKNAΞΞ.Size(map[int]int(v))
}

func (s elemEncodingMapAliasMUS) Skip(bs []byte) (n int, err error) {
	return map43fUS2Δt05YvrYGcEuvKNAΞΞ.Skip(bs)
}

var ElemValidMapAliasMUS = elemValidMapAliasMUS{}

type elemValidMapAliasMUS struct{}

func (s elemValidMapAliasMUS) Marshal(v ElemValidMapAlias, bs []byte) (n int) {
	return map3PMuzhUAOypD4DqSnnWKagΞΞ.Marshal(map[int]int(v), bs)
}

func (s elemValidMapAliasMUS) Unmarshal(bs []byte) (v ElemValidMapAlias, n int, err error) {
	tmp, n, err := map3PMuzhUAOypD4DqSnnWKagΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = ElemValidMapAlias(tmp)
	return
}

func (s elemValidMapAliasMUS) Size(v ElemValidMapAlias) (size int) {
	return map3PMuzhUAOypD4DqSnnWKagΞΞ.Size(map[int]int(v))
}

func (s elemValidMapAliasMUS) Skip(bs []byte) (n int, err error) {
	return map3PMuzhUAOypD4DqSnnWKagΞΞ.Skip(bs)
}

var ValidMapAliasMUS = validMapAliasMUS{}

type validMapAliasMUS struct{}

func (s validMapAliasMUS) Marshal(v ValidMapAlias, bs []byte) (n int) {
	return mapVybLwOR8yjz9WUosywSOΔwΞΞ.Marshal(map[int]int(v), bs)
}

func (s validMapAliasMUS) Unmarshal(bs []byte) (v ValidMapAlias, n int, err error) {
	tmp, n, err := mapVybLwOR8yjz9WUosywSOΔwΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = ValidMapAlias(tmp)
	err = ValidateMapAlias1(v)
	return
}

func (s validMapAliasMUS) Size(v ValidMapAlias) (size int) {
	return mapVybLwOR8yjz9WUosywSOΔwΞΞ.Size(map[int]int(v))
}

func (s validMapAliasMUS) Skip(bs []byte) (n int, err error) {
	return mapVybLwOR8yjz9WUosywSOΔwΞΞ.Skip(bs)
}

var AllMapAliasMUS = allMapAliasMUS{}

type allMapAliasMUS struct{}

func (s allMapAliasMUS) Marshal(v AllMapAlias, bs []byte) (n int) {
	return mapx2Di83OYuEH641nztVvsFgΞΞ.Marshal(map[int]int(v), bs)
}

func (s allMapAliasMUS) Unmarshal(bs []byte) (v AllMapAlias, n int, err error) {
	tmp, n, err := mapx2Di83OYuEH641nztVvsFgΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = AllMapAlias(tmp)
	err = ValidateMapAlias2(v)
	return
}

func (s allMapAliasMUS) Size(v AllMapAlias) (size int) {
	return mapx2Di83OYuEH641nztVvsFgΞΞ.Size(map[int]int(v))
}

func (s allMapAliasMUS) Skip(bs []byte) (n int, err error) {
	return mapx2Di83OYuEH641nztVvsFgΞΞ.Skip(bs)
}

var PtrAliasMUS = ptrAliasMUS{}

type ptrAliasMUS struct{}

func (s ptrAliasMUS) Marshal(v PtrAlias, bs []byte) (n int) {
	return ptriwXcXXMJxv0fwmlU8fBUFQΞΞ.Marshal((*int)(v), bs)
}

func (s ptrAliasMUS) Unmarshal(bs []byte) (v PtrAlias, n int, err error) {
	tmp, n, err := ptriwXcXXMJxv0fwmlU8fBUFQΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = PtrAlias(tmp)
	return
}

func (s ptrAliasMUS) Size(v PtrAlias) (size int) {
	return ptriwXcXXMJxv0fwmlU8fBUFQΞΞ.Size((*int)(v))
}

func (s ptrAliasMUS) Skip(bs []byte) (n int, err error) {
	return ptriwXcXXMJxv0fwmlU8fBUFQΞΞ.Skip(bs)
}

var ElemNumEncodingPtrAliasMUS = elemNumEncodingPtrAliasMUS{}

type elemNumEncodingPtrAliasMUS struct{}

func (s elemNumEncodingPtrAliasMUS) Marshal(v ElemNumEncodingPtrAlias, bs []byte) (n int) {
	return ptreTXEΔQvZPl1AWyH50l7g8QΞΞ.Marshal((*int)(v), bs)
}

func (s elemNumEncodingPtrAliasMUS) Unmarshal(bs []byte) (v ElemNumEncodingPtrAlias, n int, err error) {
	tmp, n, err := ptreTXEΔQvZPl1AWyH50l7g8QΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = ElemNumEncodingPtrAlias(tmp)
	return
}

func (s elemNumEncodingPtrAliasMUS) Size(v ElemNumEncodingPtrAlias) (size int) {
	return ptreTXEΔQvZPl1AWyH50l7g8QΞΞ.Size((*int)(v))
}

func (s elemNumEncodingPtrAliasMUS) Skip(bs []byte) (n int, err error) {
	return ptreTXEΔQvZPl1AWyH50l7g8QΞΞ.Skip(bs)
}

var ValidPtrAliasMUS = validPtrAliasMUS{}

type validPtrAliasMUS struct{}

func (s validPtrAliasMUS) Marshal(v ValidPtrAlias, bs []byte) (n int) {
	return ptrLGSRJu6LxqOYCY4EvJlaXgΞΞ.Marshal((*int)(v), bs)
}

func (s validPtrAliasMUS) Unmarshal(bs []byte) (v ValidPtrAlias, n int, err error) {
	tmp, n, err := ptrLGSRJu6LxqOYCY4EvJlaXgΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = ValidPtrAlias(tmp)
	err = testdata.ValidateZeroValue[*int](v)
	return
}

func (s validPtrAliasMUS) Size(v ValidPtrAlias) (size int) {
	return ptrLGSRJu6LxqOYCY4EvJlaXgΞΞ.Size((*int)(v))
}

func (s validPtrAliasMUS) Skip(bs []byte) (n int, err error) {
	return ptrLGSRJu6LxqOYCY4EvJlaXgΞΞ.Skip(bs)
}

var SimpleStructPtrAliasMUS = simpleStructPtrAliasMUS{}

type simpleStructPtrAliasMUS struct{}

func (s simpleStructPtrAliasMUS) Marshal(v SimpleStructPtrAlias, bs []byte) (n int) {
	return ptrvDcVHNNl1fY23xdΔryHx7wΞΞ.Marshal((*SimpleStruct)(v), bs)
}

func (s simpleStructPtrAliasMUS) Unmarshal(bs []byte) (v SimpleStructPtrAlias, n int, err error) {
	tmp, n, err := ptrvDcVHNNl1fY23xdΔryHx7wΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = SimpleStructPtrAlias(tmp)
	return
}

func (s simpleStructPtrAliasMUS) Size(v SimpleStructPtrAlias) (size int) {
	return ptrvDcVHNNl1fY23xdΔryHx7wΞΞ.Size((*SimpleStruct)(v))
}

func (s simpleStructPtrAliasMUS) Skip(bs []byte) (n int, err error) {
	return ptrvDcVHNNl1fY23xdΔryHx7wΞΞ.Skip(bs)
}

var SimpleStructMUS = simpleStructMUS{}

type simpleStructMUS struct{}

func (s simpleStructMUS) Marshal(v SimpleStruct, bs []byte) (n int) {
	return varint.Int.Marshal(v.Int, bs)
}

func (s simpleStructMUS) Unmarshal(bs []byte) (v SimpleStruct, n int, err error) {
	v.Int, n, err = varint.Int.Unmarshal(bs)
	return
}

func (s simpleStructMUS) Size(v SimpleStruct) (size int) {
	return varint.Int.Size(v.Int)
}

func (s simpleStructMUS) Skip(bs []byte) (n int, err error) {
	n, err = varint.Int.Skip(bs)
	return
}

var AnotherStructMUS = anotherStructMUS{}

type anotherStructMUS struct{}

func (s anotherStructMUS) Marshal(v AnotherStruct, bs []byte) (n int) {
	return varint.Int.Marshal(v.Int, bs)
}

func (s anotherStructMUS) Unmarshal(bs []byte) (v AnotherStruct, n int, err error) {
	v.Int, n, err = varint.Int.Unmarshal(bs)
	return
}

func (s anotherStructMUS) Size(v AnotherStruct) (size int) {
	return varint.Int.Size(v.Int)
}

func (s anotherStructMUS) Skip(bs []byte) (n int, err error) {
	n, err = varint.Int.Skip(bs)
	return
}

var ComplexStructMUS = complexStructMUS{}

type complexStructMUS struct{}

func (s complexStructMUS) Marshal(v ComplexStruct, bs []byte) (n int) {
	n = ord.Bool.Marshal(v.Bool, bs)
	n += varint.Uint8.Marshal(v.Byte, bs[n:])
	n += varint.Int8.Marshal(v.Int8, bs[n:])
	n += varint.Int16.Marshal(v.Int16, bs[n:])
	n += varint.Int32.Marshal(v.Int32, bs[n:])
	n += varint.Int64.Marshal(v.Int64, bs[n:])
	n += varint.Uint8.Marshal(v.Uint8, bs[n:])
	n += varint.Uint16.Marshal(v.Uint16, bs[n:])
	n += varint.Uint32.Marshal(v.Uint32, bs[n:])
	n += varint.Uint64.Marshal(v.Uint64, bs[n:])
	n += varint.Float32.Marshal(v.Float32, bs[n:])
	n += varint.Float64.Marshal(v.Float64, bs[n:])
	n += ord.String.Marshal(v.String, bs[n:])
	n += SliceAliasMUS.Marshal(v.Alias, bs[n:])
	n += pkg2.StructMUS.Marshal(v.AnotherPkgStruct, bs[n:])
	n += InterfaceMUS.Marshal(v.Interface, bs[n:])
	n += ord.ByteSlice.Marshal(v.ByteSlice, bs[n:])
	n += sliceJ9mM3TwH9NGSRg9dRM34dAΞΞ.Marshal(v.StructSlice, bs[n:])
	n += arrayr4wy7nYWZsCSpVj9NWA6awΞΞ.Marshal(v.Array, bs[n:])
	n += ptrNH6kCQLrIU4OIzE2n0WW3gΞΞ.Marshal(v.PtrString, bs[n:])
	n += ptrvDcVHNNl1fY23xdΔryHx7wΞΞ.Marshal(v.PtrStruct, bs[n:])
	n += ptrNH6kCQLrIU4OIzE2n0WW3gΞΞ.Marshal(v.NilPtr, bs[n:])
	n += ptrikbRqA7BO81F7es2ThTZΔgΞΞ.Marshal(v.PtrArray, bs[n:])
	return n + mapNJclDG86D52Pjt61euotyQΞΞ.Marshal(v.Map, bs[n:])
}

func (s complexStructMUS) Unmarshal(bs []byte) (v ComplexStruct, n int, err error) {
	v.Bool, n, err = ord.Bool.Unmarshal(bs)
	if err != nil {
		return
	}
	var n1 int
	v.Byte, n1, err = varint.Uint8.Unmarshal(bs[n:])
	n += n1
	if err != nil {
		return
	}
	v.Int8, n1, err = varint.Int8.Unmarshal(bs[n:])
	n += n1
	if err != nil {
		return
	}
	v.Int16, n1, err = varint.Int16.Unmarshal(bs[n:])
	n += n1
	if err != nil {
		return
	}
	v.Int32, n1, err = varint.Int32.Unmarshal(bs[n:])
	n += n1
	if err != nil {
		return
	}
	v.Int64, n1, err = varint.Int64.Unmarshal(bs[n:])
	n += n1
	if err != nil {
		return
	}
	v.Uint8, n1, err = varint.Uint8.Unmarshal(bs[n:])
	n += n1
	if err != nil {
		return
	}
	v.Uint16, n1, err = varint.Uint16.Unmarshal(bs[n:])
	n += n1
	if err != nil {
		return
	}
	v.Uint32, n1, err = varint.Uint32.Unmarshal(bs[n:])
	n += n1
	if err != nil {
		return
	}
	v.Uint64, n1, err = varint.Uint64.Unmarshal(bs[n:])
	n += n1
	if err != nil {
		return
	}
	v.Float32, n1, err = varint.Float32.Unmarshal(bs[n:])
	n += n1
	if err != nil {
		return
	}
	v.Float64, n1, err = varint.Float64.Unmarshal(bs[n:])
	n += n1
	if err != nil {
		return
	}
	v.String, n1, err = ord.String.Unmarshal(bs[n:])
	n += n1
	if err != nil {
		return
	}
	v.Alias, n1, err = SliceAliasMUS.Unmarshal(bs[n:])
	n += n1
	if err != nil {
		return
	}
	v.AnotherPkgStruct, n1, err = pkg2.StructMUS.Unmarshal(bs[n:])
	n += n1
	if err != nil {
		return
	}
	v.Interface, n1, err = InterfaceMUS.Unmarshal(bs[n:])
	n += n1
	if err != nil {
		return
	}
	v.ByteSlice, n1, err = ord.ByteSlice.Unmarshal(bs[n:])
	n += n1
	if err != nil {
		return
	}
	v.StructSlice, n1, err = sliceJ9mM3TwH9NGSRg9dRM34dAΞΞ.Unmarshal(bs[n:])
	n += n1
	if err != nil {
		return
	}
	v.Array, n1, err = arrayr4wy7nYWZsCSpVj9NWA6awΞΞ.Unmarshal(bs[n:])
	n += n1
	if err != nil {
		return
	}
	v.PtrString, n1, err = ptrNH6kCQLrIU4OIzE2n0WW3gΞΞ.Unmarshal(bs[n:])
	n += n1
	if err != nil {
		return
	}
	v.PtrStruct, n1, err = ptrvDcVHNNl1fY23xdΔryHx7wΞΞ.Unmarshal(bs[n:])
	n += n1
	if err != nil {
		return
	}
	v.NilPtr, n1, err = ptrNH6kCQLrIU4OIzE2n0WW3gΞΞ.Unmarshal(bs[n:])
	n += n1
	if err != nil {
		return
	}
	v.PtrArray, n1, err = ptrikbRqA7BO81F7es2ThTZΔgΞΞ.Unmarshal(bs[n:])
	n += n1
	if err != nil {
		return
	}
	v.Map, n1, err = mapNJclDG86D52Pjt61euotyQΞΞ.Unmarshal(bs[n:])
	n += n1
	return
}

func (s complexStructMUS) Size(v ComplexStruct) (size int) {
	size = ord.Bool.Size(v.Bool)
	size += varint.Uint8.Size(v.Byte)
	size += varint.Int8.Size(v.Int8)
	size += varint.Int16.Size(v.Int16)
	size += varint.Int32.Size(v.Int32)
	size += varint.Int64.Size(v.Int64)
	size += varint.Uint8.Size(v.Uint8)
	size += varint.Uint16.Size(v.Uint16)
	size += varint.Uint32.Size(v.Uint32)
	size += varint.Uint64.Size(v.Uint64)
	size += varint.Float32.Size(v.Float32)
	size += varint.Float64.Size(v.Float64)
	size += ord.String.Size(v.String)
	size += SliceAliasMUS.Size(v.Alias)
	size += pkg2.StructMUS.Size(v.AnotherPkgStruct)
	size += InterfaceMUS.Size(v.Interface)
	size += ord.ByteSlice.Size(v.ByteSlice)
	size += sliceJ9mM3TwH9NGSRg9dRM34dAΞΞ.Size(v.StructSlice)
	size += arrayr4wy7nYWZsCSpVj9NWA6awΞΞ.Size(v.Array)
	size += ptrNH6kCQLrIU4OIzE2n0WW3gΞΞ.Size(v.PtrString)
	size += ptrvDcVHNNl1fY23xdΔryHx7wΞΞ.Size(v.PtrStruct)
	size += ptrNH6kCQLrIU4OIzE2n0WW3gΞΞ.Size(v.NilPtr)
	size += ptrikbRqA7BO81F7es2ThTZΔgΞΞ.Size(v.PtrArray)
	return size + mapNJclDG86D52Pjt61euotyQΞΞ.Size(v.Map)
}

func (s complexStructMUS) Skip(bs []byte) (n int, err error) {
	n, err = ord.Bool.Skip(bs)
	if err != nil {
		return
	}
	var n1 int
	n1, err = varint.Uint8.Skip(bs[n:])
	n += n1
	if err != nil {
		return
	}
	n1, err = varint.Int8.Skip(bs[n:])
	n += n1
	if err != nil {
		return
	}
	n1, err = varint.Int16.Skip(bs[n:])
	n += n1
	if err != nil {
		return
	}
	n1, err = varint.Int32.Skip(bs[n:])
	n += n1
	if err != nil {
		return
	}
	n1, err = varint.Int64.Skip(bs[n:])
	n += n1
	if err != nil {
		return
	}
	n1, err = varint.Uint8.Skip(bs[n:])
	n += n1
	if err != nil {
		return
	}
	n1, err = varint.Uint16.Skip(bs[n:])
	n += n1
	if err != nil {
		return
	}
	n1, err = varint.Uint32.Skip(bs[n:])
	n += n1
	if err != nil {
		return
	}
	n1, err = varint.Uint64.Skip(bs[n:])
	n += n1
	if err != nil {
		return
	}
	n1, err = varint.Float32.Skip(bs[n:])
	n += n1
	if err != nil {
		return
	}
	n1, err = varint.Float64.Skip(bs[n:])
	n += n1
	if err != nil {
		return
	}
	n1, err = ord.String.Skip(bs[n:])
	n += n1
	if err != nil {
		return
	}
	n1, err = SliceAliasMUS.Skip(bs[n:])
	n += n1
	if err != nil {
		return
	}
	n1, err = pkg2.StructMUS.Skip(bs[n:])
	n += n1
	if err != nil {
		return
	}
	n1, err = InterfaceMUS.Skip(bs[n:])
	n += n1
	if err != nil {
		return
	}
	n1, err = ord.ByteSlice.Skip(bs[n:])
	n += n1
	if err != nil {
		return
	}
	n1, err = sliceJ9mM3TwH9NGSRg9dRM34dAΞΞ.Skip(bs[n:])
	n += n1
	if err != nil {
		return
	}
	n1, err = arrayr4wy7nYWZsCSpVj9NWA6awΞΞ.Skip(bs[n:])
	n += n1
	if err != nil {
		return
	}
	n1, err = ptrNH6kCQLrIU4OIzE2n0WW3gΞΞ.Skip(bs[n:])
	n += n1
	if err != nil {
		return
	}
	n1, err = ptrvDcVHNNl1fY23xdΔryHx7wΞΞ.Skip(bs[n:])
	n += n1
	if err != nil {
		return
	}
	n1, err = ptrNH6kCQLrIU4OIzE2n0WW3gΞΞ.Skip(bs[n:])
	n += n1
	if err != nil {
		return
	}
	n1, err = ptrikbRqA7BO81F7es2ThTZΔgΞΞ.Skip(bs[n:])
	n += n1
	if err != nil {
		return
	}
	n1, err = mapNJclDG86D52Pjt61euotyQΞΞ.Skip(bs[n:])
	n += n1
	return
}

var InterfaceImpl1MUS = interfaceImpl1MUS{}

type interfaceImpl1MUS struct{}

func (s interfaceImpl1MUS) Marshal(v InterfaceImpl1, bs []byte) (n int) {
	return ord.String.Marshal(v.Str, bs)
}

func (s interfaceImpl1MUS) Unmarshal(bs []byte) (v InterfaceImpl1, n int, err error) {
	v.Str, n, err = ord.String.Unmarshal(bs)
	return
}

func (s interfaceImpl1MUS) Size(v InterfaceImpl1) (size int) {
	return ord.String.Size(v.Str)
}

func (s interfaceImpl1MUS) Skip(bs []byte) (n int, err error) {
	n, err = ord.String.Skip(bs)
	return
}

var InterfaceImpl2MUS = interfaceImpl2MUS{}

type interfaceImpl2MUS struct{}

func (s interfaceImpl2MUS) Marshal(v InterfaceImpl2, bs []byte) (n int) {
	return varint.Int.Marshal(int(v), bs)
}

func (s interfaceImpl2MUS) Unmarshal(bs []byte) (v InterfaceImpl2, n int, err error) {
	tmp, n, err := varint.Int.Unmarshal(bs)
	if err != nil {
		return
	}
	v = InterfaceImpl2(tmp)
	return
}

func (s interfaceImpl2MUS) Size(v InterfaceImpl2) (size int) {
	return varint.Int.Size(int(v))
}

func (s interfaceImpl2MUS) Skip(bs []byte) (n int, err error) {
	return varint.Int.Skip(bs)
}

var InterfaceImpl1DTS = dts.New[InterfaceImpl1](InterfaceImpl1DTM, InterfaceImpl1MUS)
var InterfaceImpl2DTS = dts.New[InterfaceImpl2](InterfaceImpl2DTM, InterfaceImpl2MUS)

var InterfaceMUS = interfaceMUS{}

type interfaceMUS struct{}

func (s interfaceMUS) Marshal(v Interface, bs []byte) (n int) {
	switch t := v.(type) {
	case InterfaceImpl1:
		return InterfaceImpl1DTS.Marshal(t, bs)
	case InterfaceImpl2:
		return InterfaceImpl2DTS.Marshal(t, bs)
	default:
		panic(fmt.Sprintf("unexpected %v type", t))
	}
}

func (s interfaceMUS) Unmarshal(bs []byte) (v Interface, n int, err error) {
	dtm, n, err := dts.DTMSer.Unmarshal(bs)
	if err != nil {
		return
	}
	var n1 int
	switch dtm {
	case InterfaceImpl1DTM:
		v, n1, err = InterfaceImpl1DTS.UnmarshalData(bs[n:])
	case InterfaceImpl2DTM:
		v, n1, err = InterfaceImpl2DTS.UnmarshalData(bs[n:])
	default:
		err = fmt.Errorf("unexpected %v DTM", dtm)
		return
	}
	n += n1
	return
}

func (s interfaceMUS) Size(v Interface) (size int) {
	switch t := v.(type) {
	case InterfaceImpl1:
		return InterfaceImpl1DTS.Size(t)
	case InterfaceImpl2:
		return InterfaceImpl2DTS.Size(t)
	default:
		panic(fmt.Sprintf("unexpected %v type", t))
	}
}

func (s interfaceMUS) Skip(bs []byte) (n int, err error) {
	dtm, n, err := dts.DTMSer.Unmarshal(bs)
	if err != nil {
		return
	}
	var n1 int
	switch dtm {
	case InterfaceImpl1DTM:
		n1, err = InterfaceImpl1DTS.SkipData(bs[n:])
	case InterfaceImpl2DTM:
		n1, err = InterfaceImpl2DTS.SkipData(bs[n:])
	default:
		err = fmt.Errorf("unexpected %v DTM", dtm)
		return
	}
	n += n1
	return
}

var AnotherInterfaceMUS = anotherInterfaceMUS{}

type anotherInterfaceMUS struct{}

func (s anotherInterfaceMUS) Marshal(v AnotherInterface, bs []byte) (n int) {
	switch t := v.(type) {
	case InterfaceImpl1:
		return InterfaceImpl1DTS.Marshal(t, bs)
	case InterfaceImpl2:
		return InterfaceImpl2DTS.Marshal(t, bs)
	default:
		panic(fmt.Sprintf("unexpected %v type", t))
	}
}

func (s anotherInterfaceMUS) Unmarshal(bs []byte) (v AnotherInterface, n int, err error) {
	dtm, n, err := dts.DTMSer.Unmarshal(bs)
	if err != nil {
		return
	}
	var n1 int
	switch dtm {
	case InterfaceImpl1DTM:
		v, n1, err = InterfaceImpl1DTS.UnmarshalData(bs[n:])
	case InterfaceImpl2DTM:
		v, n1, err = InterfaceImpl2DTS.UnmarshalData(bs[n:])
	default:
		err = fmt.Errorf("unexpected %v DTM", dtm)
		return
	}
	n += n1
	return
}

func (s anotherInterfaceMUS) Size(v AnotherInterface) (size int) {
	switch t := v.(type) {
	case InterfaceImpl1:
		return InterfaceImpl1DTS.Size(t)
	case InterfaceImpl2:
		return InterfaceImpl2DTS.Size(t)
	default:
		panic(fmt.Sprintf("unexpected %v type", t))
	}
}

func (s anotherInterfaceMUS) Skip(bs []byte) (n int, err error) {
	dtm, n, err := dts.DTMSer.Unmarshal(bs)
	if err != nil {
		return
	}
	var n1 int
	switch dtm {
	case InterfaceImpl1DTM:
		n1, err = InterfaceImpl1DTS.SkipData(bs[n:])
	case InterfaceImpl2DTM:
		n1, err = InterfaceImpl2DTS.SkipData(bs[n:])
	default:
		err = fmt.Errorf("unexpected %v DTM", dtm)
		return
	}
	n += n1
	return
}

var InterfaceDoublePtrAliasMUS = interfaceDoublePtrAliasMUS{}

type interfaceDoublePtrAliasMUS struct{}

func (s interfaceDoublePtrAliasMUS) Marshal(v InterfaceDoublePtrAlias, bs []byte) (n int) {
	return ptr4ΣGeyl4njXOpw7dXGWlhlwΞΞ.Marshal((**Interface)(v), bs)
}

func (s interfaceDoublePtrAliasMUS) Unmarshal(bs []byte) (v InterfaceDoublePtrAlias, n int, err error) {
	tmp, n, err := ptr4ΣGeyl4njXOpw7dXGWlhlwΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = InterfaceDoublePtrAlias(tmp)
	return
}

func (s interfaceDoublePtrAliasMUS) Size(v InterfaceDoublePtrAlias) (size int) {
	return ptr4ΣGeyl4njXOpw7dXGWlhlwΞΞ.Size((**Interface)(v))
}

func (s interfaceDoublePtrAliasMUS) Skip(bs []byte) (n int, err error) {
	return ptr4ΣGeyl4njXOpw7dXGWlhlwΞΞ.Skip(bs)
}
