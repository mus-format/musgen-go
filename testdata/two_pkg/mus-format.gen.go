// Code generated by musgen-go. DO NOT EDIT.

package testdata

import (
	"github.com/mus-format/mus-go/ord"
	"github.com/mus-format/musgen-go/testdata/two_pkg/pkg"
)

var (
	sliceNn0z4J7QXCCbdb2WtD5P5QΞΞ = ord.NewSliceSer[pkg.MyIntSerName](pkg.MyAwesomeIntMUS)
	slicebRwxTylTQA0ΣDgRkΣylEQAΞΞ = ord.NewSliceSer[pkg.MyInt](pkg.MyIntMUS)
)

var MySliceMUS = mySliceMUS{}

type mySliceMUS struct{}

func (s mySliceMUS) Marshal(v MySlice, bs []byte) (n int) {
	return slicebRwxTylTQA0ΣDgRkΣylEQAΞΞ.Marshal([]pkg.MyInt(v), bs)
}

func (s mySliceMUS) Unmarshal(bs []byte) (v MySlice, n int, err error) {
	tmp, n, err := slicebRwxTylTQA0ΣDgRkΣylEQAΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = MySlice(tmp)
	return
}

func (s mySliceMUS) Size(v MySlice) (size int) {
	return slicebRwxTylTQA0ΣDgRkΣylEQAΞΞ.Size([]pkg.MyInt(v))
}

func (s mySliceMUS) Skip(bs []byte) (n int, err error) {
	return slicebRwxTylTQA0ΣDgRkΣylEQAΞΞ.Skip(bs)
}

var MySliceSerNameMUS = mySliceSerNameMUS{}

type mySliceSerNameMUS struct{}

func (s mySliceSerNameMUS) Marshal(v MySliceSerName, bs []byte) (n int) {
	return sliceNn0z4J7QXCCbdb2WtD5P5QΞΞ.Marshal([]pkg.MyIntSerName(v), bs)
}

func (s mySliceSerNameMUS) Unmarshal(bs []byte) (v MySliceSerName, n int, err error) {
	tmp, n, err := sliceNn0z4J7QXCCbdb2WtD5P5QΞΞ.Unmarshal(bs)
	if err != nil {
		return
	}
	v = MySliceSerName(tmp)
	return
}

func (s mySliceSerNameMUS) Size(v MySliceSerName) (size int) {
	return sliceNn0z4J7QXCCbdb2WtD5P5QΞΞ.Size([]pkg.MyIntSerName(v))
}

func (s mySliceSerNameMUS) Skip(bs []byte) (n int, err error) {
	return sliceNn0z4J7QXCCbdb2WtD5P5QΞΞ.Skip(bs)
}
